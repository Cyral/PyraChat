<!-- MahApps.Metro application style for Pyratron -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="options"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared">

    <Color x:Key="HighlightColor">#FFFC8B00</Color>

    <Color x:Key="AlternateColor">#FF333333</Color>

    <Color x:Key="AccentColor">#FFFC8B00</Color>
    <!--60%-->
    <Color x:Key="AccentColor2">#99FC8B00</Color>
    <!--40%-->
    <Color x:Key="AccentColor3">#66FC8B00</Color>
    <!--20%-->
    <Color x:Key="AccentColor4">#33FC8B00</Color>

    <!-- re-set brushes too -->
    <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
    <SolidColorBrush x:Key="AlternateColorBrush" Color="{StaticResource AlternateColor}" />
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource AccentColor2}" />
    <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource AccentColor3}" />
    <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource AccentColor4}" />

    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource AccentColor}" />

    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="White" />

    <LinearGradientBrush x:Key="ProgressBrush" EndPoint="0.001,0.5" StartPoint="1.002,0.5">
        <GradientStop Color="{StaticResource AccentColor}" Offset="0" />
        <GradientStop Color="{StaticResource AccentColor2}" Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource AccentColor}" />
    <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource AccentColor}" />

    <Color x:Key="IdealForegroundColor">White</Color>
    <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource IdealForegroundColor}" />

    <Style x:Key="MetroGroupBox"
        TargetType="{x:Type GroupBox}">
        <Setter Property="Margin"
            Value="5" />
        <Setter Property="Padding"
            Value="5" />
        <Setter Property="Foreground"
            Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Background"
            Value="{DynamicResource AlternateColorBrush}" />
        <Setter Property="BorderBrush"
            Value="{DynamicResource AlternateColorBrush}" />
        <Setter Property="controls:ControlsHelper.HeaderFontSize"
            Value="{DynamicResource ContentFontSize}" />
        <Setter Property="controls:GroupBoxHelper.HeaderForeground"
            Value="{x:Null}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter
                        Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type GroupBox}}, Path=Header, Mode=OneWay}">
                        <TextElement.Foreground>
                            <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}"
                                    Path="Background"
                                    Mode="OneWay" />
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type GroupBox}}"
                                    Path="(controls:GroupBoxHelper.HeaderForeground)"
                                    Mode="OneWay" />
                            </MultiBinding>
                        </TextElement.Foreground>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid x:Name="GroupBoxRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                TextElement.FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}"
                                TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                        <Border Grid.Row="1"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1,0,1,1">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Run" x:Key="LinkRunStyle">
        <Setter Property="FontSize"
            Value="{DynamicResource ContentFontSize}" />
        <Setter Property="FontFamily"
            Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="Foreground" Value="#FFFC8B00" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1"
                                Storyboard.TargetProperty="Foreground.Color"
                                To="CornflowerBlue" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1"
                                Storyboard.TargetProperty="Foreground.Color"
                                To="#FFFC8B00" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="LinkLabelStyle">
        <Setter Property="FontSize"
            Value="{DynamicResource ContentFontSize}" />
        <Setter Property="FontFamily"
            Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="HorizontalAlignment"
            Value="Center" />
        <Setter Property="Foreground" Value="#FFFC8B00" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1"
                                Storyboard.TargetProperty="Foreground.Color"
                                To="CornflowerBlue" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.1"
                                Storyboard.TargetProperty="Foreground.Color"
                                To="#FFFC8B00" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SquareButtonStyle"
        TargetType="{x:Type Button}">
        <Setter Property="MinHeight"
            Value="25" />
        <Setter Property="FontFamily"
            Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontWeight"
            Value="SemiBold" />
        <Setter Property="Background"
            Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush"
            Value="{DynamicResource BlackBrush}" />
        <Setter Property="Foreground"
            Value="{DynamicResource TextBrush}" />
        <Setter Property="Padding"
            Value="5,6" />
        <Setter Property="BorderThickness"
            Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{DynamicResource AlternateColorBrush}"
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                            Value="True">
                            <Setter Property="Background"
                                Value="{DynamicResource FlatButtonPressedBackgroundBrush}"
                                TargetName="Border" />
                            <Setter Property="Foreground"
                                Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                            Value="False">
                            <Setter Property="Foreground"
                                Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="True">
                            <Setter Property="Foreground"
                                Value="White" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FFFC8B00" />
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Foreground.Color"
                                            To="White" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="White" />
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Foreground.Color"
                                            To="Black" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentedDialogSquareButton"
        BasedOn="{StaticResource SquareButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background"
            Value="{DynamicResource AlternateColorBrush }" />
        <Setter Property="Foreground"
            Value="{DynamicResource IdealForegroundColorBrush }" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                            Value="True">
                            <Setter Property="Background"
                                Value="{DynamicResource FlatButtonPressedBackgroundBrush}"
                                TargetName="Border" />
                            <Setter Property="Foreground"
                                Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                            Value="False">
                            <Setter Property="Foreground"
                                Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="True">
                            <Setter Property="BorderBrush"
                                Value="{DynamicResource AlternateColorBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FFFC8B00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FF333333" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AccentedSquareButtonStyle"
        BasedOn="{StaticResource SquareButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background"
            Value="{DynamicResource AlternateColorBrush }" />
        <Setter Property="Foreground"
            Value="{DynamicResource IdealForegroundColorBrush }" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                        Margin="0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                            Value="True">
                            <Setter Property="Background"
                                Value="{DynamicResource FlatButtonPressedBackgroundBrush}"
                                TargetName="Border" />
                            <Setter Property="Foreground"
                                Value="{DynamicResource FlatButtonPressedForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                            Value="False">
                            <Setter Property="Foreground"
                                Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                            Value="True">
                            <Setter Property="BorderBrush"
                                Value="{DynamicResource AlternateColorBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FFFC8B00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.1"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FF333333" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>